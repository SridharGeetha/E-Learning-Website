        <div className="row">
          {courses.map((course, index) => (
            <div className="col-md-6 col-lg-4 mb-4" key={index}>
              <div className="card h-100 shadow-sm">
                {/* Display the course image */}
                <img
                  src={course.courseImage ? `data:image/jpeg;base64,${course.courseImage}` : '/default-course.jpg'}
                  className="card-img-top"
                  alt={course.courseName}
                  style={{ height: '200px', objectFit: 'cover' }}
                />
                <div className="card-body">
                  {/* Course name */}
                  <h5 className="card-title">{course.courseName}</h5>

                  {/* Course description */}
                  <p className="card-text">{course.description}</p>

                  {/* Instructor details */}
                  <p className="card-text">
                    <strong>Instructor:</strong> {course.instructor}
                  </p>

                  {/* Button to start the course */}
                  <a href={`/courses/${course.courseId}`} className="btn btn-primary btn-block">
                    Start the Course
                  </a>
                </div>
              </div>
            </div>
          ))}
        </div>




        dash


        import React, { useEffect, useState } from 'react'
import { useNavigate} from 'react-router-dom'
import '/src/css/admindash.css'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faUserShield, faPlus, faBook, faSignOutAlt, faUsers, faInfoCircle,faEdit, faTrash,faPencil } from '@fortawesome/free-solid-svg-icons';
import { getAllCourses, getdashBoardData, getEnrollDetails, logout } from '../UserService';
import { toast,ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

export const AdminDashboard = () => {

const[courses,setCourses]=useState([]);
const[data,SetData]=useState({
  TotalCourse:0,
  TotalEnroll:0,
  TotalStudents:0,
});
const[enrollCourseData,setEnrollCourseData]=useState([]);
const navigate=useNavigate();
const token = localStorage.getItem('token')
const username = localStorage.getItem('username')

useEffect(()=>{
    getAllCourses().then((res)=>{
        setCourses(res)
       }).catch(error =>{
        console.log(error);
    })
},[])

useEffect(()=>{
    getdashBoardData(token).then((response)=>{
      if (response.status === 200 && response.headers.get('content-type')?.includes('application/json')) {
        console.log(response.data)
        return response.data;
      }
      throw new Error('Network response was not ok');
})
        .then((dashData)=>SetData(dashData))
    .catch((error) => console.error('Error fetching dashboard data:', error));
    
},[])

useEffect(()=>{
    getEnrollDetails(token).then((response)=>{
        setEnrollCourseData(response.data)
      }).catch(error =>{
        console.log(error);
    })
},[])
console.log(enrollCourseData)
// useEffect(()=>{
//         if(filterCourse.length === 0){
//             setFilterCourse(courses);
//         }
//         else{
//             const filtered = courses.filter((course)=>course.courseName === filterCourse)
//             setFilterCourse(filtered);
//         }
        
//     },[courses])

    // const handleDelete = (courseId)=>{
    //     deleteCourse(courseId)
    //         setCourses(courses.filter((course)=>course.courseId != courseId))
    //         setFilterCourse(courses);
        
    // }




  function handleAddNewCourse(){
    navigate("/add-new-course")
    // setcc(true)
  }

  function handleAddChapter(courseId){
    navigate(`/add-new-chapter/${courseId}`);
  }
  function handleLogout(){
    logout()
    toast.success('You have successfully logged out!', {
      position: 'top-center',  
      autoClose: 3000,                   
      hideProgressBar: true,             
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined
    });
    setTimeout(()=>{
      navigate('/')
    },3000)
  }
  return (
    <>
    <div className="d-flex" id="wrapper">
        <div className='side' id="sidebar-wrapper">
            <div className="sidebar-heading text-center pe-4 py-4 primary-text fs-4 fw-bold">
             <i className='px-2'><FontAwesomeIcon icon={faUserShield} /></i>Dashboard</div>
            <div className="list-group list-group-flush my-3">
                <a href="#" className="list-group-item  bg-transparent" >
                  <i className='px-2' onClick={handleAddNewCourse}><FontAwesomeIcon icon={faPlus}/>Add New Course</i></a>
                <a href="#" className="list-group-item bg-transparent">
                  <i className='px-2'><FontAwesomeIcon icon={faBook} /></i>Add Chapter</a>
                <a href="#" className="list-group-item bg-transparent text-danger" onClick={handleLogout}>
                  <i className='px-2'><FontAwesomeIcon icon={faSignOutAlt} /></i>Logout</a>
            </div>
        </div>
      <div id="page-content-wrapper">

          <nav className="navbar navbar-light bg-light" id='navbar-dashboard'>
            <div className="container-fluid">
              <span className="navbar-brand mb-0 h1">Admin</span>
              <span className="username navbar-text me-4">{username}</span>
            </div>
          </nav>
          
          <div className="container-fluid">
            
          <div className="row">
    <div className="col-md-4">
      <div className="box">
        <h5><FontAwesomeIcon icon={faUsers} /> Number of Students</h5>
        <p className="stat">{data.TotalStudents}</p>
      </div>
    </div>
    <div className="col-md-4">
      <div className="box">
        <h5><FontAwesomeIcon icon={faBook} /> Number of Courses</h5>
        <p className="stat">{data.TotalCourse}</p>
      </div>
    </div>
    <div className="col-md-4">
      <div className="box">
        <h5><FontAwesomeIcon icon={faInfoCircle} /> Enroll Information</h5>
        <p className="stat">{data.TotalEnroll}</p>
      </div>
    </div>
  </div>
  {/* <CourseFilter data={courses} setFilterData={setFilterCourse}/> */}
  <div className="row">
              <div className="col-md-12">
                <table className="table table-striped">
                  <thead>
                    <tr>
                      <th>ID</th>
                      <th>Course Name</th>
                      <th>Instructor</th>
                      <th>Actions</th>
                      <th>Add Chapter</th>
                    </tr>
                  </thead>
                  <tbody>
                {
                    courses.map((course) => 
                      <tr key={course.courseId}>
                        <td>{course.courseId}</td>
                        <td>{course.courseName}</td>
                        <td>{course.instructor}</td>
                        <td>
                          <a href="#" className="button-alter"> <FontAwesomeIcon icon={faEdit} style={{ color: 'black' }} className='pe-4'/></a>
                          <a href="#" className="button-alter" ><FontAwesomeIcon icon={faTrash} style={{ color: 'black' }} /></a>
                        </td>
                        <td>
                          <a href="#" className="hover-blue" onClick={()=>handleAddChapter(course.courseId)}>
                          <FontAwesomeIcon icon={faPencil} style={{ color: 'black' }} /> 
                          </a>
                        </td>
                      </tr>
                    )
                }
                  </tbody>
                </table>
              </div>
            </div>
          </div>
          {/* .... */}
        </div>
    </div>
    <ToastContainer position="top-center" autoClose={3000} />
    </>
  )
}
